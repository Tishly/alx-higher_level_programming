The ''0-add_integer'' module
=============================

Using ''add_integer''
--------------------

'''
# Import the required function
>>> from importlib import import_module
>>> add_integer = import_module('0-add_integer').add_integer

# Checking for module docstring:
>>> m = __import__('0-add_integer').__doc__
>>> len(m) > 1
True

# Valid arguments
Chcking regular addition:
>>> add_integer(2, 4)
6

Checking positive with negative:
>>> add_integer(50, -13)
37

Checking float with int:
>>> add_integer(15.4, 5)
20

Checking both float:
>>> add_integer(96.4, 24.5)
120

Checking addition of multiple values:
>>> [add_integer(i, i ** 2) for i in range(6)]
[0, 2, 6, 12, 20, 30]


>>> add_integer(500, 15)
515


Checking for passed NaN:
>>> add_integer(1, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

Checking for passed inf:
>>> add_integer(1, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

Checking super long int:
>>> add_integer(999999999999999999999999999999, 1)
1000000000000000000000000000000

Checking non-number with number:
>>> add_integer([1], 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

Checking number with non-number:
>>> add_integer(3, "2")
Traceback (most recent call last):
...
TypeError: b must be an integer

Checking non-number with non-number:
>>> add_integer((2,), {"key": "value"})
Traceback (most recent call last):
...
TypeError: a must be an integer

Checking bool with number:
>>> add_integer(True, 1)
Traceback (most recent call last):
...
TypeError: a must be an integer

Checking number with bool:
>>> add_integer(0, False)
Traceback (most recent call last):
...
TypeError: b must be an integer

Checking no args:
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

Checking one arg:
>>> add_integer(1)
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'b'

Checking more than 2 args:
>>> add_integer(1, 2, 3)
Traceback (most recent call last):
...
TypeError: add_integer() takes 2 positional arguments but 3 were given
